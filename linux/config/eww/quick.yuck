(include "./user/widget.yuck")
(include "./wifi/widget.yuck")
(include "./volume/widget.yuck")
(include "./battery/widget.yuck")
(include "./packages/widget.yuck")
(include "./bluetooth/widget.yuck")
(include "./shortcuts/widget.yuck")
(include "./brightness/widget.yuck")
(include "./system-stats/widget.yuck")

(defwindow quick :monitor 0 :stacking "fg" :wm-ignore true
                 :geometry (geometry :x "-20px" :y "66px"
                 :anchor "top right")
  (v-window
    (box :spacing SPACING :orientation "horizontal" :space-evenly false :hexpand true
      (user)
      (power-menu)
    )
    (box :spacing SPACING :orientation "horizontal" :space-evenly true
      (packages)
      (battery)
    )
    (box :spacing SPACING :orientation "horizontal" :space-evenly true
      (wifi)
      (bluetooth)
    )
    (system-stats)
    (box :class "panel" :spacing SPACING :orientation "vertical" :space-evenly true
      (volume)
      (brightness)
    )
    (shortcuts)
  )
)

(defwidget power-menu []
  (box :class "panel" :orientation "horizontal" :spacing SPACING
    (pointer :active true
      (button :class "button" :onclick "u_eww toggle power"
        (icon :name "power-off")
      )
    )
  )
)

; (defwidget ext_monitor_brightness []
;   (box :orientation "horizontal" :space-evenly false :spacing SPACING
;     (pointer :active true
;       (button :class "button" :onclick "u_monitors brightness reset" :tooltip "Resets brightness to 0" :timeout "5s"
;         (icon :name "display")
;       )
;     )
;     (eventbox :cursor "grab" :hexpand true
;       (scale :value ext_monitor_brightness :min 0 :max 100 :onchange "u_monitors brightness set {} &"
;              :tooltip "Change brightness on all detected monitors" :timeout "5")
;     )
;   )
; )

; (defwidget keyboard_brightness [?active]
;   (box :class "component ${ active ? "" : "disabled" }" :orientation "horizontal" :space-evenly false :spacing SPACING
;     (button :class "button ${ active ? "" : "disabled" }" :onclick "u_keeb_backlight get"
;       (icon :name "keyboard-brightness")
;     )
;     (eventbox :cursor { active ? "grab" : "default" } :hexpand true
;       (scale :active {active} :hexpand true :value 2 :min 1 :max 3 :onchange "u_keeb_backlight set {}"
;              :tooltip "Change laptop keyboard brightness")
;     )
;   )
; )
