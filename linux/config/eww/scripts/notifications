#!/bin/env ruby

require "json"
require "date"

HIDE_LIST = [
  "info",
  "spotify",
  "volume",
  "brightness",
  "flameshot",
  "power manager",
  "package manager",
  "networkmanager applet",
  "microphone",
  "notify-send"
].freeze

def enrich(entry)
  entry.merge(
    {
      "icon" => Icon.for(entry),
      "app_name" => entry.fetch("app_name").capitalize,
      "timestamp" => Time.at(entry.fetch("time")).strftime("%m/%d %H:%M")
    }
  )
end

module Icon
  extend self

  ICONS = [
    {
      body: /was saved in/,
      icon: "key-skeleton"
    },
    {
      name: "Printers",
      icon: "print"
    },
    {
      name: "Google Chrome",
      icon: "globe"
    },
    {
      name: ["Telegram Desktop", "discord", "Slack", "WhatsApp"],
      icon: "messages"
    },
    {
      name: "blueman",
      icon: "bluetooth"
    }
  ].freeze

  def for(entry)
    ICONS.find do |icon|
      in_name?(icon, entry) ||
        in_app_name?(icon, entry) ||
        in_body?(icon, entry)
    end&.fetch(:icon, "bell")
  end

  private

  def in_name?(icon, entry)
    Array(icon[:name]).include?(entry.fetch("app_name"))
  end

  def in_app_name?(icon, entry)
    Array(icon[:name]).any? { |n| entry.fetch("app_name").downcase.include?(n.downcase) }
  end

  def in_body?(icon, entry)
    icon[:body]&.match?(entry.fetch("body"))
  end
end

puts `cat /tmp/wired.log`
  .split("\n")
  .map { |entry| JSON.parse(entry) }
  .select { |entry| (entry.values_at("app_name", "summary").map(&:downcase) & HIDE_LIST).empty? }
  .sort { |entry, _| entry.fetch("time") }
  .first(25)
  .map(&method(:enrich))
  .to_json
