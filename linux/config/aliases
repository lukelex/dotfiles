#!/usr/bin/bash

# Editor
alias e="nvim ."
alias vim="nvim"

# Bash
alias open="xdg-open"
alias o="xdg-open"
alias v="viewnior"
alias t="tree"
alias cls="printf '\033c'"
alias b="bat"
alias m="man"

alias l="ls --group-directories-first --color=auto -lahvF"
alias ls="ls --group-directories-first --color=auto"

# GIT
alias g="git"
alias gs="git status"
alias gd="git diff --color"
alias ga="git add"
alias gal="git add ."
alias gb="git branch --sort committerdate"
alias gc="git checkout"
alias gcb="git checkout -b"
alias gcl="git clone --recursive"
alias gmv="git mv"
alias gcm="git commit"
alias gcmf="git commit --fixup"
alias gcam="git add . && git commit"
alias gcamf="git add . && git commit --fixup"
alias gps="git push"
alias gpl="git pull --rebase"
alias gm="git merge"
alias gr="git rebase"
alias gri="git rebase -i --autosquash"
alias grhh="git reset --hard HEAD"
alias gl="git log"
alias gls="git log --oneline --decorate"
alias grl="git reflog"
alias gcap="git add . && git commit --amend --no-edit && git push --force-with-lease"

git_clean() {
  # Don't kill the whole shell on error
  set -u
  set +e

  # ANSI colors
  RED='\033[0;31m'
  BLUE='\033[0;34m'
  NC='\033[0m' # No Color

  # Ensure we are in a git repo
  if ! git rev-parse --is-inside-work-tree &>/dev/null; then
    echo "Not inside a git repository."
    return 0
  fi

  git remote prune origin &> /dev/null || true

  local heads
  local branches=()

  # Collect local branches safely into an array
  while IFS= read -r branch; do
    # strip leading * and spaces
    branch="${branch##\* }"
    branch="${branch## }"
    # skip protected ones
    if [[ "$branch" != "main" && "$branch" != "development" ]]; then
      branches+=("$branch")
    fi
  done < <(git branch --format="%(refname:short)")

  heads=$(git ls-remote --heads -q) || true

  for branch in "${branches[@]}"; do
    if ! echo "$heads" | grep -q -F "$branch"; then
      echo -e "Looking for '$branch'... ${RED}not found remotely → removing${NC}"
      git branch -D "$branch" || true
    else
      echo -e "Looking for '$branch'... ${BLUE}found remotely → keeping${NC}"
    fi
  done
}

# Docker
alias dc="docker"
alias dcp="docker-compose"

[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"
