#!/usr/bin/bash

set -eu

source "$HOME/dotfiles/linux/variables.env"

VOL_HIGH=
VOL_MEDIUM=
VOL_LOW=
VOL_MUTE=

MIC_HIGH=
MIC_MEDIUM=
MIC_LOW=
MIC_MUTE=

function icon_mic {
  value=`get_volume`

  if [[ `is_mute` ]]; then
    echo $MIC_MUTE
  elif [[ 1 -eq $(echo "$value > 85" | bc -l) ]]; then
    echo "%{F#FF0000}$MIC_HIGH%{F-}"
  elif [[ 1 -eq $(echo "$value > 50" | bc -l) ]]; then
    echo $MIC_HIGH
  elif [[ 1 -eq $(echo "$value > 25" | bc -l) ]]; then
    echo $MIC_MEDIUM
  else
    echo $MIC_LOW
  fi
}

function icon_volume {
  value=`get_volume`

  if [[ `vol_is_mute` ]]; then
    echo $VOL_MUTE
  elif [[ 1 -eq $(echo "$value > 85" | bc -l) ]]; then
    echo $VOL_HIGH
  elif [[ 1 -eq $(echo "$value > 50" | bc -l) ]]; then
    echo $VOL_HIGH
  elif [[ 1 -eq $(echo "$value > 25" | bc -l) ]]; then
    echo $VOL_MEDIUM
  else
    echo $VOL_LOW
  fi
}

function turn_on {
  wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
}

function get_volume {
  bc <<< "$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2}') * 100"
}

function get_mic {
  amixer -D pulse get Capture | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1
}

function vol_is_mute {
  pactl get-sink-mute @DEFAULT_SINK@ | grep yes
}

function mic_is_mute {
  amixer -D pulse get Capture | grep '%' | grep -oE '[^ ]+$' | grep off
}

function show_volume {
  volume=`get_volume`

  if vol_is_mute ; then
    notify-send -a System \
                -i "$FONT_AWESOME_PATH/light/volume-slash.svg" \
                -h string:wired-tag:system \
                -h int:value:0\
                "Volume"
  else
    notify-send -a System \
                -i "$FONT_AWESOME_PATH/light/volume.svg" \
                -h string:wired-tag:system \
                -h int:value:"$volume" \
                "Volume"
  fi
}

function show_mic {
  volume=`get_mic`

  if mic_is_mute ; then
    notify-send -a System \
                -i "$FONT_AWESOME_PATH/light/microphone-lines-slash.svg" \
                -h string:wired-tag:system \
                -h int:value:0\
                "Microphone"
  else
    notify-send -a System \
                -i "$FONT_AWESOME_PATH/light/microphone-lines.svg" \
                -h string:wired-tag:system \
                -h int:value:"$volume" \
                "Microphone"
  fi
}

case $1 in
  mic|microphone)
    case $2 in
      get) get_mic;;
      icon) icon_mic ;;
      set)
        amixer -D pulse sset Capture $3% > /dev/null
        play "$HOME/dotfiles/sounds/audio-volume-change.oga" &> /dev/null &
        # show_mic
        ;;
      show) show_mic ;;
      toggle)
        amixer -D pulse set Capture 1+ toggle > /dev/null
        show_mic
        ;;
    esac
    ;;
  vol|volume)
    case $2 in
      get) get_volume;;
      icon) icon_volume;;
      inc)
        turn_on
        wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+
        play "$HOME/dotfiles/sounds/audio-volume-change.oga" &> /dev/null &
        show_volume;;
      dec)
        turn_on
        wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-
        play "$HOME/dotfiles/sounds/audio-volume-change.oga" &> /dev/null &
        show_volume;;
      set)
        wpctl set-volume @DEFAULT_AUDIO_SINK@ $3%
        play "$HOME/dotfiles/sounds/audio-volume-change.oga" &> /dev/null &
        # show_volume
        ;;
      show) show_volume;;
      default) wpctl set-default $3;;
      toggle)
        wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
        show_volume;;
    esac
esac
